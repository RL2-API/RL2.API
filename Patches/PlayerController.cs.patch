diff --git a/RL2-Source/PlayerController.cs b/Assembly-CSharp/PlayerController.cs
index fe5c816..79a425d 100644
--- a/RL2-Source/PlayerController.cs
+++ b/Assembly-CSharp/PlayerController.cs
@@ -8,6 +8,7 @@ using Rewired;
 using SceneManagement_RL;
 using Sigtrap.Relays;
 using UnityEngine;
+using RL2.ModLoader;
 
 public class PlayerController : BaseCharacterController, IDamageObj, IWeaponOnEnterHitResponse, IHitResponse, IHasProjectileNameArray, IAudioEventEmitter
 {
@@ -843,6 +844,16 @@ public class PlayerController : BaseCharacterController, IDamageObj, IWeaponOnEn
 		m_onRelicChanged = OnRelicChanged;
 		m_applyPermanentStatusEffects = ApplyPermanentStatusEffects;
 		m_onHouseRulesChanged = OnHouseRulesChanged;
+		foreach (Mod mod in ModLoader.LoadedMods) {
+			foreach (Type modPlayer in mod.ModPlayers) {
+				ModPlayer modPlayerInstance = gameObject.AddComponent(modPlayer) as ModPlayer;
+				if (!modPlayerInstance.IsLoadingEnabled()) {
+					Destroy(modPlayerInstance);
+					continue;
+				}
+				modPlayerInstance.OnLoad();
+			}
+		}
 	}
 
 	public override void ResetBaseValues()
@@ -1875,7 +1886,14 @@ public class PlayerController : BaseCharacterController, IDamageObj, IWeaponOnEn
 
 	public override void KillCharacter(GameObject killer, bool broadcastEvent)
 	{
-		if (base.IsDead)
+		bool shouldDie = true;
+		foreach (ModPlayer modPlayer in gameObject.GetComponents<ModPlayer>()) {
+			if (!modPlayer.PreKill(killer)) {
+				shouldDie = false;
+				break;
+			}
+		}
+		if (base.IsDead || shouldDie)
 		{
 			return;
 		}
@@ -1917,6 +1935,9 @@ public class PlayerController : BaseCharacterController, IDamageObj, IWeaponOnEn
 		}
 		StopActiveAbilities(stopPersistentAbilities: true);
 		WindowManager.SetWindowIsOpen(WindowID.PlayerDeath, isOpen: true);
+		foreach (ModPlayer modPlayer in gameObject.GetComponents<ModPlayer>()) {
+			modPlayer.OnKill(killer);
+		}
 	}
 
 	public void EnterRoom(BaseRoom room, Door door, Vector3 localPosition)
