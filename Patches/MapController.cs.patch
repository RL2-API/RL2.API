diff --git a/RL2-Source/MapController.cs b/Assembly-CSharp/MapController.cs
index ce546a8..8a94226 100644
--- a/RL2-Source/MapController.cs
+++ b/Assembly-CSharp/MapController.cs
@@ -3,6 +3,7 @@ using System.Collections;
 using System.Collections.Generic;
 using RLWorldCreation;
 using RL_Windows;
+using RL2.ModLoader;
 using SceneManagement_RL;
 using UnityEngine;
 using UnityEngine.SceneManagement;
@@ -237,8 +238,30 @@ public class MapController : MonoBehaviour
 
 	public static float MapIconAnimationCurveValue { get; private set; }
 
+	public Dictionary<string, GameObject> TextureHashes = new Dictionary<string, GameObject>();
+
 	public static GameObject GetSpecialIconPrefab(GridPointManager roomToCheck, bool getUsed, bool isMergeRoom)
 	{
+		Texture2D modMapIconTexture = null;
+		foreach (ModSystem modSystem in GameManager.Instance.GetComponents<ModSystem>()) {
+			if (modMapIconTexture != null) {
+				break;
+			}
+			modMapIconTexture = modSystem.ModifyRoomIcon(roomToCheck, getUsed, isMergeRoom);
+		}
+		if (modMapIconTexture != null) {
+			string textureHash = string.Concat(modMapIconTexture.GetPixels32());
+            if (m_instance.TextureHashes.ContainsKey(textureHash)) {
+				return m_instance.TextureHashes[textureHash];
+			}
+			GameObject modMapIconObject = Instantiate(m_instance.m_specialRoomIconPrefab);
+			Sprite sprite = Sprite.Create(modMapIconTexture, new Rect(0f, 0f, modMapIconTexture.width, modMapIconTexture.height), new Vector2(.5f, .5f));
+			modMapIconObject.GetComponent<SpriteRenderer>().sprite = sprite;
+			GameObject.DontDestroyOnLoad(modMapIconObject);
+            modMapIconObject.SetActive(false);
+            m_instance.TextureHashes.Add(textureHash, modMapIconObject);
+			return modMapIconObject;
+		}
 		if (!roomToCheck.RoomMetaData.ShowIconOnMap)
 		{
 			return null;
